# Сортировка вставками
import time

print('Какое пожелаете количество элементов массива?')
N = int(input())  # указываем файл с каким кол-вом чисел хотим открыть

with open('input' + str(N) + '.txt') as file:  # открываем файл input[N].txt
    string = [row.strip() for row in file]  # и разделяем на строки

arr = string[1].split(' ')  # строку с числами разделяем на массив
arr = [int(arr) for arr in arr]  # присваиваем элементам массива тип integer
print(arr)  # начальный массив

start_time = time.time()  # время начала сортировки

# в данном типе сортировки массив разбивается на отсортированную и неотсортированную части
# первый элемент принимается за последний отсортированный, второй - за текущий
# сохраняем индекс последнего отсортированного элемента
    # ПОКА нарушается последовательность сортировки (посл. отсорт. элемент БОЛЬШЕ текущего)
    # текущему элементу присваиваем значение последнего отсортированного
    # переходим к проверке предыдущего отсортированного элемента
# КОГДА последовательность перестаёт нарушаться вставляем текущий элемент
    # т.е. меняем местами все элементы перед текущим, пока не сможем вставить его в правильное место 

for i in range(1, N):   # первый элемент считается отсортированным, поэтому начинаем со 2-го
    current = arr[i]  # сохраняем текущий (2-ой) элемент
    last_sorted = i - 1   # сохраняем ИНДЕКС последнего отсортированного элемента (1-го)
    while arr[last_sorted] > current and last_sorted >= 0:   # пока последний отсортированный элемент (1-ый) БОЛЬШЕ текущего (3-го) и мы не вышли за начало массива
        arr[last_sorted + 1] = arr[last_sorted]   # текущему (второму) элементу присваиваем значение предыдущего (первого)
        last_sorted -= 1   # переходим к проверке предыдущего элемента из отсортированного сегмента
    arr[last_sorted + 1] = current  # когда следующий элемент МЕНЬШЕ или мы вышли за начало массива
    # текущему элементу присваеваем текущее значение

finish_time = time.time()  # время окончания сортировки
print(arr)  # конечный массив

print('Время сортировки:')
print(finish_time - start_time, "seconds")  # длительность сортировки

f = open('output' + str(N) + '.txt', 'w')  # создаём файл output[N].txt

for i in range(N):
    f.write(str(arr[i]) + ' ')  # вписываем отсортированные числа в файл, разделяя пробелами

f.close()
